@using Azure.AI.OpenAI;

@if (client is null)
{
    <p>
        Enter your OpenAI API Key:
    </p>

    <input type="text" maxlength="64" @bind="@OpenAIApiKey" />
    <button type="button" @onclick="@Start"><span class="oi oi-chat" aria-hidden="true"></span> Start!</button>

    // Error messages
    @if (_message != null)
    {
        <div class="invalid-feedback">@_message</div>
        <small id="emailHelp" class="form-text text-muted">@_message</small>
    }
}
else
{
    <div id="scrollbox">
        @foreach (Message item in _messages)
        {
            <div class="@item.CSS">
                <div class="user">@item.UserName</div>
                <div class="msg">@item.Body</div>
            </div>
        }
        <hr />
        <textarea class="input-lg" placeholder="enter your text" @bind="@_message"></textarea>

        <button class="btn btn-default" @onclick="@SendAsync">Send</button>
    </div>
}

@code {
    private string? OpenAIApiKey;

    private OpenAIClient? client;

    private void Start()
    {
        client = new(OpenAIApiKey);
    }

    private async Task SendAsync()
    {
        if (client is null) return;

        _messages.Add(new("You", _message, true));

        ChatCompletionsOptions chatCompletionsOptions = new();
        chatCompletionsOptions.Messages.Add(new(ChatRole.User, _message));

        _message = "";

        Azure.Response<ChatCompletions> result = await client.GetChatCompletionsAsync(
            // モデル名
            deploymentOrModelName: "gpt-3.5-turbo-0301",
            chatCompletionsOptions);

        _responses.Add(result);

        _messages.Add(new("AI", result.Value.Choices[0].Message.Content, false));
    }

    // on-screen message
    private string _message = "";

    // list of messages in chat
    private List<Message> _messages = new List<Message>();

    private List<Azure.Response<ChatCompletions>> _responses = new();

    private class Message
    {
        public Message(string userName, string body, bool mine)
        {
            UserName = userName;
            Body = body;
            Mine = mine;
        }

        public string UserName { get; set; }
        public string Body { get; set; }
        public bool Mine { get; set; }

        public string CSS => Mine ? "sent" : "received";
    }
}
